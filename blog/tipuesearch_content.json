{"pages":[{"title":"About","text":"2018 Fall 分組網誌 課程倉儲: https://github.com/mdecourse/2018fall 課程投影片: https://mdecourse.github.io/2018fall/reveal 課程網誌: https://mdecourse.github.io/2018fall/blog","tags":"misc","url":"https://mdecourse.github.io/2018fall/blog/pages/about/"},{"title":"2018 Fall W 7","text":"學習如何架構虛擬網路 課程內容 1.因Github出問題，所以學習架構虛擬網路和複習week1~week6所學 2.練習繪製onshape week5 homework part1 和 part2","tags":"Misc","url":"https://mdecourse.github.io/2018fall/blog/2018-Fall-Project-Blog-6.html"},{"title":"2018 Fall W 6","text":"複習上課內容，學習如何處理error問題 課程內容 1.複習week1~week5 2.學習如何處理網誌error的問題 3.安裝新版p37 4.leo 不能亂刪任何一個符號!!!! 否則後果不堪設想","tags":"Misc","url":"https://mdecourse.github.io/2018fall/blog/2018-Fall-Project-Blog-5.html"},{"title":"2018 Fall W 5","text":"練習繪製onshape 課程內容 1.boolean--消除圓以內的材料 2.split--分割實體面 3.modify fillet--修改圓角 4.helix--螺旋線 5.draft--拔模 6.replace face--偏移表面 7.mirror--鏡射","tags":"Misc","url":"https://mdecourse.github.io/2018fall/blog/2018-Fall-Project-Blog-4.html"},{"title":"2018 Fall W 4","text":"學習如何使用onshape 課程內容 1.extrude--拉伸 2.revolve--旋轉 3.symmetric--對稱 4.pattern--陣列 5.loft--斷面混層 6.sweep--掃掠 7.shell--薄殼","tags":"Misc","url":"https://mdecourse.github.io/2018fall/blog/2018-Fall-Project-Blog-3.html"},{"title":"2018 Fall W 3","text":"中秋節放假拉 爽拉","tags":"Misc","url":"https://mdecourse.github.io/2018fall/blog/2018-Fall-Project-Blog-2.html"},{"title":"2018 Fall W 2","text":"管理個人的期中作業網站內容 課程內容 1.進到mde.tw > i >week2>領取個人倉儲 (在mdecadp2018下的site-40623232) 2.在site-40623232的 settings > Branches > 將branches改為gh-pages 3.開始試著練習OnShape ，更新網站內容","tags":"Misc","url":"https://mdecourse.github.io/2018fall/blog/2018-Fall-Project-Blog-1.html"},{"title":"2018 Fall W 1","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. 課程倉儲 利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處: 第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 cp github 倉儲 外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料. 第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 cp 課程網站 伺服. 第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料. 該學習哪種程式語言? C/C++、Python、Lua 或 Javascript? 都可以. 在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.","tags":"Misc","url":"https://mdecourse.github.io/2018fall/blog/2018-Fall-Project-Blog.html"}]}